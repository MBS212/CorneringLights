// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// --------------- //
// corneringlights //
// --------------- //

#define corneringlights_wrap_target 0
#define corneringlights_wrap 2

static const uint16_t corneringlights_program_instructions[] = {
            //     .wrap_target
    0x80a0, //  0: pull   block                      
    0x6001, //  1: out    pins, 1                    
    0x0000, //  2: jmp    0                          
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program corneringlights_program = {
    .instructions = corneringlights_program_instructions,
    .length = 3,
    .origin = -1,
};

static inline pio_sm_config corneringlights_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + corneringlights_wrap_target, offset + corneringlights_wrap);
    return c;
}

  static inline void corneringlights_program_init(PIO pio, uint sm, uint offset, uint pin) {
    pio_sm_config c = corneringlights_program_get_default_config(offset);
	sm_config_set_out_pins(&c, pin, 1);
	pio_gpio_init(pio, pin);
	pio_sm_set_consecutive_pindirs(pio, sm, pin, 1, true);
	pio_sm_init(pio, sm, offset, &c);
	pio_sm_set_enabled(pio, sm, true);
}

#endif

